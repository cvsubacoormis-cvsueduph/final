// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         String @id @default(uuid()) // Use UUID for id
  firstName  String
  middleName String?
  lastName   String
  address    String
  phone      String?
  email      String
  birthday   DateTime
  sex        UserSex
  username   String @unique
  role       Role   @default(admin)
}

model Student {
  id            String     @id @default(cuid())
  studentNumber Int        @unique
  username      String     @unique
  firstName     String
  lastName      String
  middleInit    String?
  email         String?    @unique
  phone         String     @unique
  address       String
  img           String?
  sex           UserSex
  course        Courses
  major         Major?
  status        Status
  birthday      String
  role          Role       @default(student)
  createdAt     DateTime   @default(now())
  grades        Grade[]
}

model AcademicTerm {
  id           String       @id @default(cuid())
  academicYear AcademicYear
  semester     Semester
  grades       Grade[]

  @@unique([academicYear, semester], map: "unique_academic_term")
}

model Grade {
  id            String       @id @default(cuid())
  studentNumber Int
  student       Student      @relation(fields: [studentNumber], references: [studentNumber])
  courseCode    String
  creditUnit    Int
  courseTitle   String
  grade         Float
  reExam        Float?
  remarks       String?
  instructor    String
  academicYear  AcademicYear
  semester      Semester
  academicTerm  AcademicTerm @relation(fields: [academicYear, semester], references: [academicYear, semester])
  createdAt     DateTime     @default(now())

  @@unique([studentNumber, courseCode, academicYear, semester], map: "unique_student_course_term")
}

enum AcademicYear {
  AY_2023_2024
  AY_2024_2025
  AY_2025_2026
  AY_2026_2027
}

enum Semester {
  FIRST
  SECOND
  MIDYEAR
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  startTime   String
  endTime     String
  createdAt   DateTime @default(now())
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        String
  createdAt   DateTime @default(now())
}

enum UserSex {
  MALE
  FEMALE
}

enum Courses {
  BSIT
  BSCS
  BSCRIM
  BSP
  BSHM
  BSED
  BSBA
}

enum yearLevels {
  FIRST
  SECOND
  THIRD
  FOURTH
}

enum Status {
  REGULAR
  IRREGULAR
}

enum Role {
  admin
  student
  superuser
}

enum Major {
  HUMAN_RESOURCE_MANAGEMENT
  MARKETING_MANAGEMENT
  ENGLISH
  MATHEMATICS
}
