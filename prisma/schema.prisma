// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         String  @id @default(uuid()) // Use UUID for id
  firstName  String
  middleName String?
  lastName   String
  address    String
  phone      String?
  email      String
  birthday   String
  sex        UserSex
  username   String  @unique
  role       Role    @default(admin)
}

model Student {
  id            String   @id @default(cuid())
  studentNumber String   @unique
  username      String   @unique
  firstName     String
  lastName      String
  middleInit    String?
  email         String?
  phone         String?
  address       String
  img           String?
  sex           UserSex
  course        Courses
  major         String?
  status        Status
  birthday      DateTime
  role          Role     @default(student)
  createdAt     DateTime @default(now())
  grades        Grade[]
}

model AcademicTerm {
  id               String            @id @default(cuid())
  academicYear     AcademicYear
  semester         Semester
  subjectOfferings SubjectOffering[]
  grades           Grade[]

  @@unique([academicYear, semester], map: "unique_academic_term")
}

model SubjectOffering {
  id              String       @id @default(cuid())
  courseCode      String
  courseTitle     String
  creditUnitLec   Int
  creditUnitLab   Int
  contactHoursLec Int
  contactHoursLab Int
  course          Courses
  major           Major?
  yearLevel       yearLevels
  semester        Semester
  academicTerm    AcademicTerm @relation(fields: [academicTermId], references: [id])
  academicTermId  String
  grades          Grade[]

  @@unique([courseCode, academicTermId, course, major], map: "unique_subject_offering")
}

model Grade {
  id                String   @id @default(cuid())
  studentId         String
  subjectOfferingId String
  grade             String
  reExam            String?
  remarks           String?
  instructor        String
  createdAt         DateTime @default(now())
  isFinalized       Boolean  @default(false)

  student         Student         @relation(fields: [studentId], references: [id])
  subjectOffering SubjectOffering @relation(fields: [subjectOfferingId], references: [id])
  AcademicTerm    AcademicTerm?   @relation(fields: [academicTermId], references: [id])
  academicTermId  String?
}

enum AcademicYear {
  AY_2023_2024
  AY_2024_2025
  AY_2025_2026
  AY_2026_2027
}

enum Semester {
  FIRST
  SECOND
  MIDYEAR
}

model GradeUploadLog {
  id         String       @id @default(cuid())
  uploaderId String
  filename   String
  uploadedAt DateTime     @default(now())
  status     UploadStatus
  errorCount Int
  processed  Int
  notes      String?
}

enum UploadStatus {
  SUCCESS
  PARTIAL
  FAILED
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  startTime   String
  endTime     String
  createdAt   DateTime @default(now())
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        String
  createdAt   DateTime @default(now())
}

model News {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  category    String
  important   Boolean @default(false)
  author      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

enum UserSex {
  MALE
  FEMALE
}

enum Courses {
  BSIT
  BSCS
  BSCRIM
  BSP
  BSHM
  BSED
  BSBA
}

enum yearLevels {
  FIRST
  SECOND
  THIRD
  FOURTH
}

enum Status {
  REGULAR
  IRREGULAR
  NOT_ANNOUNCED
  TRANSFEREE
  RETURNEE
  GRADUATED
  INACTIVE
  ACTIVE
}

enum Role {
  admin
  student
  superuser
}

enum Major {
  HUMAN_RESOURCE_MANAGEMENT
  MARKETING_MANAGEMENT
  ENGLISH
  MATHEMATICS
}
